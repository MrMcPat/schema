"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const base_1 = require("./base");
class LiveCommandBase extends base_1.default {
    getStreamId(flags, streamName) {
        switch (flags.streamId) {
            case 'stream-id':
                // just a pass-through
                return streamName;
        }
        throw new Error("Could not derive a stream ID. Please pass one with --stream-id.");
    }
}
exports.default = LiveCommandBase;
LiveCommandBase.argsForSingleLiveStream = [
    {
        name: 'streamName',
        description: "the name (coupled with --reference-type) to look up in Mux to yield this livestream",
        required: true,
    },
];
LiveCommandBase.flagsForSingleLiveStream = {
    streamId: command_1.flags.string({
        name: 'reference-type',
        char: 't',
        description: 'the type of the provided reference name',
        options: ['stream-id'],
        default: 'stream-id',
    }),
};
