"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const base_1 = require("./base");
class AssetCommandBase extends base_1.default {
    playbackUrl(asset) {
        var _a;
        const publicPlaybackId = ((_a = asset.playback_ids) !== null && _a !== void 0 ? _a : []).find(p => p.policy === 'public');
        if (!publicPlaybackId) {
            return 'No public playback policies found!';
        }
        return `https://mux-playground.now.sh/videojs?playback_id=${publicPlaybackId.id}`;
    }
    pollAsset(assetId) {
        return new Promise((resolve, reject) => {
            const poll = () => setTimeout(async () => {
                try {
                    const asset = await this.Video.Assets.get(assetId);
                    if (asset.status === 'ready') {
                        return resolve(asset);
                    }
                    else if (asset.status === 'errored') {
                        return reject(asset);
                    }
                    poll();
                }
                catch (err) {
                    reject(err);
                }
            }, 500);
            poll();
        });
    }
}
exports.default = AssetCommandBase;
AssetCommandBase.flags = {
    private: command_1.flags.boolean({
        char: 'p',
        description: 'add a private playback policy to the created asset',
    }),
};
